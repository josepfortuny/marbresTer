// node_modules/pinia-plugin-persistedstate-2/dist/index.es.prod.mjs
function t(t2, e2, r2, n2) {
  return !/^(__proto__|constructor|prototype)$/.test(e2) && ((e2 = e2.split ? e2.split(".") : e2.slice(0)).slice(0, -1).reduce(function(t3, e3) {
    return t3[e3] = t3[e3] || {};
  }, t2)[e2.pop()] = r2), t2;
}
function e(t2, e2) {
  return null != t2 ? t2 : e2;
}
function r(t2, r2, n2, o) {
  return e(e(n2[r2], o[r2]), t2);
}
function n(e2) {
  var n2 = e2 || {};
  return function(e3) {
    var o = function() {
      try {
        return e3.options.persistedState || {};
      } catch (t2) {
        return {};
      }
    }();
    if (false !== r(true, "persist", o, n2)) {
      var i, s = r(e3.store.$id, "key", o, {}), c = r(false, "overwrite", o, n2), u = r(function() {
        try {
          return window.localStorage;
        } catch (t2) {
          return { getItem: function() {
          }, setItem: function() {
          }, removeItem: function() {
          } };
        }
      }(), "storage", o, n2), a = r(function() {
        return true;
      }, "filter", o, n2), f = r(JSON.stringify, "serialize", o, n2), p = r(JSON.parse, "deserialize", o, n2), d = r(function(t2) {
        return t2;
      }, "migrate", o, {}), l = r(function(t2, e4) {
        return e4;
      }, "merge", o, {});
      void 0 === o.assertStorage && (o.assertStorage = function(t2) {
        var e4 = t2.setItem("@@", "1"), r2 = function() {
          t2.removeItem("@@");
        };
        e4 instanceof Promise ? e4.then(r2) : r2();
      }), o.assertStorage(u);
      var v = new Promise(function(t2) {
        i = t2;
      }), m = 0;
      e3.store.$persistedState = { isReady: function() {
        return v;
      }, pending: false };
      try {
        var g = u.getItem(s);
        g instanceof Promise ? g.then(y) : y(g);
      } catch (t2) {
        console.warn(t2), i();
      }
      e3.store.$subscribe(function(r2, n3) {
        if (false !== a(r2, n3)) {
          Array.isArray(o.includePaths) && (n3 = o.includePaths.reduce(function(e4, r3) {
            return t(e4, r3, function(t2, e5, r4) {
              return void 0 === (t2 = (e5.split ? e5.split(".") : e5).reduce(function(t3, e6) {
                return t3 && t3[e6];
              }, t2)) ? r4 : t2;
            }(n3, r3));
          }, {})), Array.isArray(o.excludePaths) && (n3 = p(f(n3)), o.excludePaths.forEach(function(e4) {
            return t(n3, e4, void 0);
          }, {}));
          var i2 = f(n3), c2 = u.setItem(s, i2);
          c2 instanceof Promise && (++m, e3.store.$persistedState.pending = 0 !== m, c2.catch(function() {
          }).finally(function() {
            --m, e3.store.$persistedState.pending = 0 !== m;
          }));
        }
      });
    }
    function h(t2) {
      (o.beforeHydrate || function() {
      })(e3.store.$state);
      var r2 = l(e3.store.$state, t2);
      c ? e3.store.$state = r2 : e3.store.$patch(r2), i();
    }
    function y(t2) {
      if (null != t2) {
        var e4 = p(t2), r2 = d(e4);
        r2 instanceof Promise ? r2.then(h) : h(r2);
      } else
        i();
    }
  };
}
export {
  n as createPersistedStatePlugin
};
//# sourceMappingURL=pinia-plugin-persistedstate-2.js.map
